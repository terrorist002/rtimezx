timezx <- function(infect,years,months) {
library(dplyr)
infect <- infect %>% filter(审核状态 != "已删除卡")  #去除删除卡
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
szknybk <- xtabs(~ mon+ year,data=timedate)  #不同月份每年的报卡 四格表
#时间序列
colnames(szknybk) <- NULL  #去除列变量名
rownames(szknybk) <- NULL  #去除行变量名
szknybk2 <- c(szknybk)
library(forecast) #载入所需包
library(tseries) #载入所需包
szknybk2 <- ts(szknybk2,frequency = 12,start = c(years, months))  #转换为是时间序列格式
szktimeseries <- auto.arima(szknybk2,seasonal = TRUE, trace = TRUE)
return(szktimeseries)
}
szk <- read.csv("C:/Users/Administrator/Desktop/szk_Virus.csv", header=TRUE,stringsAsFactors = FALSE, fileEncoding = "GB18030")
timezx <- function(infect,years,months) {
library(dplyr)
infect <- infect %>% filter(审核状态 != "已删除卡")  #去除删除卡
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
szknybk <- xtabs(~ mon+ year,data=timedate)  #不同月份每年的报卡 四格表
#时间序列
colnames(szknybk) <- NULL  #去除列变量名
rownames(szknybk) <- NULL  #去除行变量名
szknybk2 <- c(szknybk)
library(forecast) #载入所需包
library(tseries) #载入所需包
szknybk2 <- ts(szknybk2,frequency = 12,start = c(years, months))  #转换为是时间序列格式
szktimeseries <- auto.arima(szknybk2,seasonal = TRUE, trace = TRUE)
return(szktimeseries)
}
rtimezx <- function(infect,years,months) {
library(dplyr)
infect <- infect %>% filter(审核状态 != "已删除卡")  #去除删除卡
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
szknybk <- xtabs(~ mon+ year,data=timedate)  #不同月份每年的报卡 四格表
#时间序列
colnames(szknybk) <- NULL  #去除列变量名
rownames(szknybk) <- NULL  #去除行变量名
szknybk2 <- c(szknybk)
library(forecast) #载入所需包
library(tseries) #载入所需包
szknybk2 <- ts(szknybk2,frequency = 12,start = c(years, months))  #转换为是时间序列格式
szktimeseries <- auto.arima(szknybk2,seasonal = TRUE, trace = TRUE)
return(szktimeseries)
}
rtimezx(szk,12)
rtimezx(szk,2012,1)
View(szk)
?separate
??separate
rtimezx <- function(infect,years,months) {
library(tidyr)
infect <- infect %>% filter(审核状态 != "已删除卡")  #去除删除卡
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
szknybk <- xtabs(~ mon+ year,data=timedate)  #不同月份每年的报卡 四格表
#时间序列
colnames(szknybk) <- NULL  #去除列变量名
rownames(szknybk) <- NULL  #去除行变量名
szknybk2 <- c(szknybk)
library(forecast) #载入所需包
library(tseries) #载入所需包
szknybk2 <- ts(szknybk2,frequency = 12,start = c(years, months))  #转换为是时间序列格式
szktimeseries <- auto.arima(szknybk2,seasonal = TRUE, trace = TRUE)
return(szktimeseries)
}
rtimezx(szk,2012,1)
ycszk <- forecast(szktimeseries,6) #预测12个月
timeforzx <- function(timeseries,mons) {
#进行预测
ycszk <- forecast(timeseries,mons) #预测N个月
}
rtimezx <- function(infect,years,months) {
library(tidyr)
infect <- infect %>% filter(审核状态 != "已删除卡")  #去除删除卡
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
szknybk <- xtabs(~ mon+ year,data=timedate)  #不同月份每年的报卡 四格表
#时间序列
colnames(szknybk) <- NULL  #去除列变量名
rownames(szknybk) <- NULL  #去除行变量名
szknybk2 <- c(szknybk)
library(forecast) #载入所需包
library(tseries) #载入所需包
szknybk2 <- ts(szknybk2,frequency = 12,start = c(years, months))  #转换为是时间序列格式
szktimeseries <- auto.arima(szknybk2,seasonal = TRUE, trace = TRUE)
return(szktimeseries)
}
szk <- read.csv("C:/Users/Administrator/Desktop/szk_Virus.csv", header=TRUE,stringsAsFactors = FALSE, fileEncoding = "GB18030")
tsa <- rtimezx(szk,12,1)
View(szk)
tsa <- rtimezx(szk,12,1)
tsa <- rtimezx(szk,12,1)
tsa <- rtimezx(szk,12,1)
library(tidyverse)
tsa <- rtimezx(szk,12,1)
detach("package:tidyverse", unload = TRUE)
tsa <- rtimezx(szk,12,1)
detach("package:tidyverse", unload = TRUE)
tsa <- rtimezx(szk,12,1)
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
r
rtimezx <- function(infect,years,months) {
library(tidyr)
infect <- infect %>% filter(审核状态 != "已删除卡")  #去除删除卡
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
szknybk <- xtabs(~ mon+ year,data=timedate)  #不同月份每年的报卡 四格表
#时间序列
colnames(szknybk) <- NULL  #去除列变量名
rownames(szknybk) <- NULL  #去除行变量名
szknybk2 <- c(szknybk)
library(forecast) #载入所需包
library(tseries) #载入所需包
szknybk2 <- ts(szknybk2,frequency = 12,start = c(years, months))  #转换为是时间序列格式
szktimeseries <- auto.arima(szknybk2,seasonal = TRUE, trace = TRUE)
return(szktimeseries)
}
szk <- read.csv("C:/Users/Administrator/Desktop/szk_Virus.csv", header=TRUE,stringsAsFactors = FALSE, fileEncoding = "GB18030")
tsa <- rtimezx(szk,2012,1)
rtimezx <- function(infect,years,months) {
library(tidyr)
library(dplyr)
infect <- infect %>% filter(审核状态 != "已删除卡")  #去除删除卡
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
szknybk <- xtabs(~ mon+ year,data=timedate)  #不同月份每年的报卡 四格表
#时间序列
colnames(szknybk) <- NULL  #去除列变量名
rownames(szknybk) <- NULL  #去除行变量名
szknybk2 <- c(szknybk)
library(forecast) #载入所需包
library(tseries) #载入所需包
szknybk2 <- ts(szknybk2,frequency = 12,start = c(years, months))  #转换为是时间序列格式
szktimeseries <- auto.arima(szknybk2,seasonal = TRUE, trace = TRUE)
return(szktimeseries)
}
rtimezx <- function(infect,years,months) {
library(tidyr)
library(dplyr)
infect <- infect %>% filter(审核状态 != "已删除卡")  #去除删除卡
#拆分日期
timedate <- infect %>%
separate(发病日期, into = c("year", "mon" ,"day"), sep = "/") %>% select( year, mon ,day)
szknybk <- xtabs(~ mon+ year,data=timedate)  #不同月份每年的报卡 四格表
#时间序列
colnames(szknybk) <- NULL  #去除列变量名
rownames(szknybk) <- NULL  #去除行变量名
szknybk2 <- c(szknybk)
library(forecast) #载入所需包
library(tseries) #载入所需包
szknybk2 <- ts(szknybk2,frequency = 12,start = c(years, months))  #转换为是时间序列格式
szktimeseries <- auto.arima(szknybk2,seasonal = TRUE, trace = TRUE)
return(szktimeseries)
}
tsa <- rtimezx(szk,2012,1)
tsa
summary(tsa)
timeforzx <- function(timeseries,mons) {
#进行预测
ycszk <- forecast(timeseries,mons) #预测N个月
}
timeforzx(tsa,6)
View(timeforzx)
tsafor <- timeforzx(tsa,6)
tsafor
timeplotzx <- function(timeseries,mons) {
plot(forecast(timeseries,mons),xlab="Year",ylab="Annual Flow") #绘制预测
}
timeplotzx(tsa,6)
